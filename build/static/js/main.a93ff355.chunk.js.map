{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","reducers/notificationReducer.js","components/Blog.js","components/BlogList.js","components/User.js","components/UserList.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","services/login.js","services/users.js","reducers/userReducer.js","App.js","components/Store.js","index.js"],"names":["baseUrl","token","setToken","newToken","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","incrementLikes","id","put","deleteBlog","delete","blogReducer","state","action","type","map","obj","likes","setNotification","message","time","error","dispatch","console","log","setTimeout","emptyNotification","notificationReducer","Blog","blog","useState","useDispatch","className","title","href","url","target","value","Button","style","margin","onClick","newBlog","changedBlog","blogService","author","user","username","name","window","confirm","newBlogs","exception","BlogList","blogs","useSelector","ListGroup","Item","to","User","i","key","UserList","users","length","Notification","notification","notifications","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","password","onSubmit","onChange","BlogForm","props","newTitle","setTitle","newAuthor","setAuthor","newUrl","setUrl","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","placeholder","event","preventDefault","buttonLabel","Togglable","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","children","login","credentials","userReducer","App","setUsername","setPassword","setUser","useEffect","userService","loggedUserJSON","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","sort","b","userMatch","useRouteMatch","urlUser","find","params","blogMatch","urlBlog","padding","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","Nav","Link","clear","location","reload","path","reducer","combineReducers","Store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.a93ff355.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://blog-app-list.herokuapp.com/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then((response) => response.data)\n}\n\nconst create = async (newObject) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst incrementLikes = async (id, newObject) => {\n    const response = await axios.put(`${baseUrl}/${id}`, newObject)\n    return response.data\n}\n\nconst deleteBlog = async (id) => {\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    return response.data\n}\n\nexport default { setToken, getAll, create, incrementLikes, deleteBlog }\n","import blogService from '../services/blogs'\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state.map(obj => {\n        return (\n          obj.id === action.data.id ? {\n            ...obj, \n            likes: obj.likes + 1\n          } : obj\n        )\n      })\n    case 'NEW_BLOG':\n      return [...state, action.data]\n    case 'DELETE_BLOG':\n      return action.data\n    case 'INIT_BLOGS':\n      return action.data\n    default: \n      return state\n  }\n}\n\nexport const incrementLikes = (newBlog) => {\n  return async dispatch => {\n    const changedBlog = { ...newBlog, likes: newBlog.likes + 1 };\n    const incrementLikes = await blogService.incrementLikes(newBlog.id, changedBlog)\n    console.log('lets go boiiis', incrementLikes)\n    dispatch({\n      type: 'INCREMENT',\n      data: newBlog\n    })\n  }\n}\n\nexport const createBlog = (blog) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(blog)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog,\n    })\n  }\n}\n\nexport const deleteBlog = (blog) => {\n  if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`)) {\n    try {\n      return async dispatch => {\n        const blogs = await blogService.deleteBlog(blog.id)\n        const newBlogs = await blogService.getAll()\n        console.log('DELETED: ', newBlogs)\n        dispatch({\n          type: 'DELETE_BLOG',\n          data: newBlogs,\n        })\n      }\n    } catch (exception) {\n      console.log(exception);\n    }\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\nexport default blogReducer","const initialState = null\n\nconst notificationReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'SET':\n        return {message: action.message, error: action.error}\n      case 'EMPTY':\n        return null\n      default:\n        return state\n    }\n  }\n\n\n  export const notificationVote = (anecdote) => {\n    return {\n      type: 'VOTE',\n      anecdote,\n    }\n  }\n\n  export const notificationNewAnecdote = (anecdote) => {\n    return {\n      type: 'ADD',\n      anecdote,\n    }\n  }\n\n  export const setNotification = (message, time = 5, error = true) => {\n    return async dispatch => {\n        console.log(message)\n      setTimeout(() => {\n        dispatch(emptyNotification())\n      }, time * 1000)\n      dispatch({\n        type: 'SET',\n        message,\n        time,\n        error\n      })\n    }\n  }\n\n  export const emptyNotification = () => {\n    return {\n      type: 'EMPTY'\n    }\n  }\n  \n  export default notificationReducer","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport {incrementLikes, deleteBlog} from '../reducers/blogReducer'\nimport { setNotification, emptyNotification } from '../reducers/notificationReducer'\nimport {Button} from 'react-bootstrap'\nimport PropTypes from \"prop-types\";\n\n\nconst Blog = ({ blog }) => {\n\tconst [visible, setVisible] = useState(false);\n\tconst dispatch = useDispatch()\n\n\tif(!blog) {\n\t\treturn null\n\t}\n\n\tconst handleClickLike = () => {\n\t\tdispatch(incrementLikes(blog))\n\t}\n\n\tconst handleClickDelete = () => {\n\t\tdispatch(deleteBlog(blog))\n\t\tdispatch(setNotification(`'${blog.title}' by ${blog.author} has been removed`, 5, false))\n\t  }\n\n\tconst buttonStyle = {\n\t\tmargin: \"6px\",\n\t};\n\n\treturn (\n\t\t<div className=\"blog\">\n\t\t\t<div className=\"authorAndTitle\">\n\t\t\t\t<h2>{blog.title}</h2>\n\t\t\t</div>\n\t\t\t<div className=\"likesAndUrl\">\n\t\t\t\t<a href={blog.url} target=\"_blank\">{blog.url}</a>\n\t\t\t\t<p>\n\t\t\t\t\t<span className=\"likes-blog\" value={blog.likes}>\n\t\t\t\t\t\t{blog.likes} likes\n\t\t\t\t\t</span>\n\t\t\t\t\t\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={buttonStyle}\n\t\t\t\t\t\tonClick={handleClickLike}\n\t\t\t\t\t\tclassName=\"likeButton\"\n\t\t\t\t\t>\n\t\t\t\t\t\tlike\n\t\t\t\t\t</Button>\n\t\t\t\t</p>\n\t\t\t\t<p>added by {blog.author}</p>\n\t\t\t\t{blog.user.username === blog.user.username &&\n\t\t\t\tblog.user.name === blog.user.name ? (\n\t\t\t\t\t<Button onClick={handleClickDelete}>remove</Button>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nBlog.propTypes = {\n\tblog: PropTypes.object.isRequired,\n\tuser: PropTypes.object.isRequired,\n};\n\nexport default Blog;\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useRouteMatch,\n  useHistory,\n} from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport {ListGroup} from 'react-bootstrap'\n\nconst BlogList = () => {\n    const dispatch = useDispatch()\n    const blogs = useSelector(state => state.blogs)\n    console.log(blogs)\n  \n    return(\n      <div>\n        <ListGroup>\n          {blogs.map(blog =>\n                <div>\n                  <ListGroup.Item className=\"listGroupItem\">\n                    <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n                  </ListGroup.Item>\n                </div>\n                \n          )}\n        </ListGroup>\n      </div>\n    )\n  }\n  \n  export default BlogList","import React from 'react'\n\nconst User = ({user}) => {\n    if(!user) {\n      return null\n    }\n  \n    return (\n      <div>\n        <h2>{user.name}</h2>\n        <h1>added blogs</h1>\n        <ul>\n          {user.blogs.map((blog, i) => <li key={i}>{blog.title}</li>)}\n        </ul>\n        \n      </div>\n    )\n}\n\nexport default User;","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useRouteMatch,\n  useHistory,\n} from \"react-router-dom\"\nimport { useSelector } from 'react-redux'\nimport {ListGroup} from 'react-bootstrap'\n\nconst UserList = () => {\n    const users = useSelector(state => state.users)\n    console.log(users)\n  \n    return(\n      <div>\n        <ListGroup>\n          {users.map(user =>\n                <div>\n                  <ListGroup.Item className=\"listGroupItem\">\n                    <Link to={`/users/${user.id}`}>{user.name}</Link>, blogs created: {user.blogs.length}\n                  </ListGroup.Item>\n                  \n                </div>\n          )}\n        </ListGroup>\n      </div>\n    )\n  }\n  \n  export default UserList","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst Notification = () => {\n    const notification = useSelector(state => state.notifications)\n\n    if (notification === null) {\n        return null\n    }\n\n    if (notification.error === false) {\n        return <div className=\"success\">{notification.message}</div>\n    } \n\n    return <div className=\"error\">{notification.message}</div>\n}\n\nNotification.propTypes = {\n    err: PropTypes.bool.isRequired,\n}\n\nexport default Notification\n","import React from \"react\";\nimport { setNotification } from '../reducers/notificationReducer'\nimport {Button} from 'react-bootstrap'\nimport PropTypes from \"prop-types\";\n\nconst LoginForm = ({\n\thandleSubmit,\n\thandleUsernameChange,\n\thandlePasswordChange,\n\tusername,\n\tpassword,\n}) => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Login</h2>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\tusername\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChange={handleUsernameChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tpassword\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={handlePasswordChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Button id=\"login-button\" type=\"submit\">\n\t\t\t\t\tlogin\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nLoginForm.propTypes = {\n\thandleSubmit: PropTypes.func.isRequired,\n\thandleUsernameChange: PropTypes.func.isRequired,\n\thandlePasswordChange: PropTypes.func.isRequired,\n\tusername: PropTypes.string.isRequired,\n\tpassword: PropTypes.string.isRequired,\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux'\nimport { createBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport {Form, Row, Col, Button} from 'react-bootstrap'\n\nconst BlogForm = (props) => {\n\tconst [newTitle, setTitle] = useState(\"\");\n\tconst [newAuthor, setAuthor] = useState(\"\");\n\tconst [newUrl, setUrl] = useState(\"\");\n\n\tconst dispatch = useDispatch()\n\n\tconst addBlog = (event) => {\n\t\tevent.preventDefault();\n\t\tconst newBlog = {\n\t\t\ttitle: newTitle,\n\t\t\tauthor: newAuthor,\n\t\t\turl: newUrl,\n\t\t}\n\n\t\tsetTitle(\"\");\n\t\tsetAuthor(\"\");\n\t\tsetUrl(\"\");\n\n\t\tdispatch(createBlog(newBlog))\n\t\tdispatch(setNotification(`a new blog ${newTitle} by ${newAuthor} added`, 5, false))\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Create a new blog</h2>\n\n\t\t\t<Form>\n\t\t\t\t<Form.Group as={Row} controlId=\"formHorizontalTitle\">\n\t\t\t\t\t<Form.Label column sm={1}>\n\t\t\t\t\tTitle\n\t\t\t\t\t</Form.Label>\n\t\t\t\t\t<Col sm={5}>\n\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\ttype=\"email\" \n\t\t\t\t\t\t\tplaceholder=\"Email\" \n\t\t\t\t\t\t\tonChange={({ target }) => setTitle(target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group as={Row} controlId=\"formHorizontalAuthor\">\n\t\t\t\t\t<Form.Label column sm={1}>\n\t\t\t\t\tAuthor\n\t\t\t\t\t</Form.Label>\n\t\t\t\t\t<Col sm={5}>\n\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\tplaceholder=\"Password\" \n\t\t\t\t\t\t\tonChange={({ target }) => setAuthor(target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group as={Row} controlId=\"formHorizontalUrl\">\n\t\t\t\t\t<Form.Label column sm={1}>\n\t\t\t\t\tUrl\n\t\t\t\t\t</Form.Label>\n\t\t\t\t\t<Col sm={5}>\n\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\tplaceholder=\"Password\" \n\t\t\t\t\t\t\tonChange={({ target }) => setUrl(target.value)}/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group as={Row}>\n\t\t\t\t\t<Col sm={5}>\n\t\t\t\t\t<Button type=\"submit\" onClick={addBlog}>{props.buttonLabel}</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\n\nexport default BlogForm;\n","import React, { useState } from 'react'\nimport {Button} from 'react-bootstrap'\nimport PropTypes from 'prop-types'\n\nconst Togglable = (props) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <Button onClick={toggleVisibility}>cancel</Button>\n            </div>\n        </div>\n    )\n}\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired,\n}\n\nexport default Togglable\n","import axios from 'axios'\nconst baseUrl = 'https://blog-app-list.herokuapp.com/api/login'\n\nconst login = async (credentials) => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = 'https://blog-app-list.herokuapp.com/api/users'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then((response) => response.data)\n}\n\nexport default { getAll }\n","import userService from '../services/users'\nconst userReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.data\n    default: \n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users\n    })\n  }\n}\n\nexport default userReducer","import React, { useState, useEffect } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useRouteMatch,\n    useHistory,\n  } from \"react-router-dom\"\n\nimport Blog from './components/Blog'\nimport BlogList from './components/BlogList'\nimport User from './components/User'\nimport UserList from './components/UserList'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport {useDispatch, useSelector} from 'react-redux'\nimport {initializeBlogs} from './reducers/blogReducer'\nimport {initializeUsers} from './reducers/userReducer'\nimport {setNotification} from './reducers/notificationReducer'\n\nimport {Navbar, Nav, Button} from 'react-bootstrap'\n\nconst App = () => {\n    \n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(initializeBlogs())\n        dispatch(initializeUsers())\n    }, [dispatch])\n\n    const blogs = useSelector(state => state.blogs)\n    const users = useSelector(state => state.users)\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n        }\n    }, [])\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n\n        try {\n            const user = await loginService.login({\n                username,\n                password,\n            })\n\n            window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user))\n            blogService.setToken(user.token)\n\n            setUser(user)\n            dispatch(setNotification(`${user.name} has logged in`, 5, false))\n            setUsername('')\n            setPassword('')\n        } catch (exception) {\n            dispatch(setNotification('Wrong credentials', 5, true))\n        }\n    }\n\n    const handleLogout = () => {\n        setUser(null)\n        window.localStorage.clear()\n        window.location.reload(false)\n    }\n\n    const loginForm = () => (\n        <Togglable buttonLabel=\"Login\">\n            <LoginForm\n                username={username}\n                password={password}\n                handleUsernameChange={({ target }) => setUsername(target.value)}\n                handlePasswordChange={({ target }) => setPassword(target.value)}\n                handleSubmit={handleLogin}\n            />\n        </Togglable>\n    )\n\n    const blogForm = () => (\n        <Togglable buttonLabel=\"Create\">\n            <BlogForm buttonLabel=\"Create\"/>\n        </Togglable>\n    )\n\n    blogs.sort((a, b) => (a.likes > b.likes ? -1 : 1))\n\n    const userMatch = useRouteMatch('/users/:id')\n    const urlUser = userMatch \n    ? users.find(user => user.id === userMatch.params.id)\n    : null\n\n    const blogMatch = useRouteMatch('/blogs/:id')\n    const urlBlog = blogMatch \n    ? blogs.find(blog => blog.id === blogMatch.params.id)\n    : null\n\n    const padding = {\n        padding: 5\n    }\n\n    return (\n        <div>\n            <Notification />\n\n            {user === null ? <h2>Blog App</h2> && loginForm() : (\n                <div>\n                    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"#\" as=\"span\">\n                                <Link style={padding} to=\"/blogs\">Blogs</Link>\n                            </Nav.Link>\n                            <Nav.Link href=\"#\" as=\"span\">\n                                <Link style={padding} to=\"/users\">Users</Link>\n                            </Nav.Link>\n                            <Nav.Link href=\"#\" as=\"span\">\n                                <span>{user.name} logged-in <Button onClick={handleLogout} className=\"navLink\">logout</Button>{' '}</span>\n                            </Nav.Link>\n                        </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n\n                    <Switch>\n                        <Route path=\"/users/:id\">\n                            <User user={urlUser} />\n                        </Route>\n                        <Route path=\"/users\">\n                            <h2>Users</h2>\n                            <UserList />\n                        </Route>\n                        <Route path=\"/blogs/:id\">\n                            <Blog blog={urlBlog} />\n                        </Route>\n                        <Route path=\"/\">\n                            <h2>Blogs</h2>\n                            {blogForm()}\n                            {user !== null && <BlogList />}\n                        </Route>\n                        \n                    </Switch>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default App\n\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport blogReducer from '../reducers/blogReducer'\nimport notificationReducer from '../reducers/notificationReducer'\nimport userReducer from '../reducers/userReducer'\n\nconst reducer = combineReducers({\n    blogs: blogReducer,\n    notifications: notificationReducer,\n    users: userReducer\n})\n\nconst Store = createStore(reducer, composeWithDevTools(\n    applyMiddleware(thunk)\n))\n\nexport default Store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport Store from './components/Store'\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\"\nimport './styles.css'\n\nReactDOM.render(\n  <Router>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}